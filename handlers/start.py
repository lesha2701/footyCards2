from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import CommandStart
from aiogram.fsm.context import FSMContext
import html

from db.user_queries import get_user_by_id, create_user

router = Router()

@router.message(CommandStart())
async def start(message: Message, state: FSMContext) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start —Å –∫—Ä–∞—Å–∏–≤—ã–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º"""
    user_id = message.from_user.id
    username = html.escape(message.from_user.full_name)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –ë–î, –µ—Å–ª–∏ –Ω–µ—Ç - –¥–æ–±–∞–≤–ª—è–µ–º
    user = await get_user_by_id(user_id)
    is_new_user = not user
    
    if is_new_user:
        await create_user(
            user_id=user_id,
            username=username,
            balance=100  # –°—Ç–∞—Ä—Ç–æ–≤—ã–π –±–æ–Ω—É—Å
        )
    
    # –†–∞–∑–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã –¥–ª—è –Ω–æ–≤—ã—Ö –∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    if is_new_user:
        welcome_text = f"""
üéâ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ FootyCards 2!</b> ‚öΩ

<b>–¢–≤–æ–π —Ñ—É—Ç–±–æ–ª—å–Ω—ã–π –º–∏—Ä –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–Ω—ã—Ö –∫–∞—Ä—Ç:</b>

<blockquote>üèÜ <b>–°–æ–±–∏—Ä–∞–π</b> - –û—Ç–∫—Ä—ã–≤–∞–π –ø–∞–∫–∏ —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ –∫–∞—Ä—Ç–∞–º–∏ –∏–≥—Ä–æ–∫–æ–≤
‚≠ê <b>–ö–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–∏—Ä—É–π</b> - –ü–æ–ª—É—á–∏ –≤—Å–µ –∫–∞—Ä—Ç—ã –∏–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π
üîÑ <b>–û–±–º–µ–Ω–∏–≤–∞–π—Å—è</b> - –¢–æ—Ä–≥—É–π –∫–∞—Ä—Ç–∞–º–∏ —Å –¥—Ä—É–≥–∏–º–∏ –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä–∞–º–∏
üèÖ <b>–°–æ—Ä–µ–≤–Ω—É–π—Å—è</b> - –£—á–∞—Å—Ç–≤—É–π –≤ —Ç—É—Ä–Ω–∏—Ä–∞—Ö –∏ –ø–æ–¥–Ω–∏–º–∞–π—Å—è –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ</blockquote>

üéÅ <b>–°—Ç–∞—Ä—Ç–æ–≤—ã–π –±–æ–Ω—É—Å:</b> 100 –º–æ–Ω–µ—Ç –¥–ª—è –ø–µ—Ä–≤—ã—Ö –ø–∞–∫–æ–≤!

<i>–ì–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å —Å–≤–æ—ë —Ñ—É—Ç–±–æ–ª—å–Ω–æ–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ?</i> üöÄ
        """
    else:
        welcome_text = f"""
‚öΩ <b>–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {username}!</b> üèÜ

–¢–≤–æ—è –∫–æ–ª–ª–µ–∫—Ü–∏—è –∂–¥—ë—Ç —Ç–µ–±—è! –ü—Ä–æ–¥–æ–ª–∂–∞–π —Å–æ–±–∏—Ä–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∫–∞—Ä—Ç—ã —Ñ—É—Ç–±–æ–ª–∏—Å—Ç–æ–≤.

üéØ <b>–ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å —Å–µ–≥–æ–¥–Ω—è?</b>
<blockquote>‚Ä¢ –û—Ç–∫—Ä–æ–µ–º –Ω–æ–≤—ã–µ –ø–∞–∫–∏? üì¶
‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∏–º –Ω–æ–≤—ã–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏? üé®
‚Ä¢ –ú–æ–∂–µ—Ç –æ–±–º–µ–Ω—è–µ–º—Å—è –∫–∞—Ä—Ç–∞–º–∏? üîÑ</blockquote>

<i>–í–ø–µ—Ä—ë–¥ –∫ –Ω–æ–≤—ã–º —Ñ—É—Ç–±–æ–ª—å–Ω—ã–º —Ç—Ä–æ—Ñ–µ—è–º!</i>
        """

    button = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìã –û—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é", callback_data="open_menu")]
    ])
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –º–µ–Ω—é
    await message.answer(
        text=welcome_text,
        reply_markup=button,
        parse_mode="HTML"
    )
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.clear()