from aiogram import Router, F
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
import random
import asyncio
from typing import Dict, Any

from db.user_queries import *
from db.game_queries import *

router = Router()

# –§—É—Ç–±–æ–ª—å–Ω—ã–µ –∫–∞—Ä—Ç—ã (–∏–≥—Ä–æ–∫–∏ —Å —Ä–µ–π—Ç–∏–Ω–≥–æ–º –≤–º–µ—Å—Ç–æ –∫–∞—Ä—Ç–æ—á–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π)
# –ú–∞—Å—Ç–∏ –¥–ª—è –∫–∞—Ä—Ç
SUITS = ["‚ô•", "‚ô¶", "‚ô£", "‚ô†"]

# –§—É—Ç–±–æ–ª—å–Ω—ã–µ –∫–∞—Ä—Ç—ã —Å —Ä—É—Å—Å–∫–∏–º–∏ –∏–º–µ–Ω–∞–º–∏ –∏ –º–∞—Å—Ç—è–º–∏
FOOTBALL_CARDS = {}

# –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç—ã –ø–æ –∞–Ω–∞–ª–æ–≥–∏–∏ —Å –∏–≥—Ä–∞–ª—å–Ω—ã–º–∏ (4 –º–∞—Å—Ç–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –Ω–æ–º–∏–Ω–∞–ª–∞)
# –¢—É–∑ (1 –∏–ª–∏ 11 –æ—á–∫–æ–≤)
for suit in SUITS:
    FOOTBALL_CARDS[f'–õ–∏–æ–Ω–µ–ª—å –ú–µ—Å—Å–∏ {suit}'] = 11
    FOOTBALL_CARDS[f'–ö—Ä–∏—à—Ç–∏–∞–Ω—É –†–æ–Ω–∞–ª–¥—É {suit}'] = 11
    FOOTBALL_CARDS[f'–ü–µ–ª–µ {suit}'] = 11
    FOOTBALL_CARDS[f'–ú–∞—Ä–∞–¥–æ–Ω–∞ {suit}'] = 11

# –ö–æ—Ä–æ–ª—å (10 –æ—á–∫–æ–≤)
for suit in SUITS:
    FOOTBALL_CARDS[f'–ù–µ–π–º–∞—Ä {suit}'] = 10
    FOOTBALL_CARDS[f'–ö–∏–ª–∏–∞–Ω –ú–±–∞–ø–ø–µ {suit}'] = 10
    FOOTBALL_CARDS[f'–†–æ–±–µ—Ä—Ç –õ–µ–≤–∞–Ω–¥–æ–≤—Å–∫–∏ {suit}'] = 10
    FOOTBALL_CARDS[f'–ö–µ–≤–∏–Ω –î–µ –ë—Ä–µ–π–Ω–µ {suit}'] = 10

# –î–∞–º–∞ (10 –æ—á–∫–æ–≤)
for suit in SUITS:
    FOOTBALL_CARDS[f'–í–∏—Ä–¥–∂–∏–ª –≤–∞–Ω –î–µ–π–∫ {suit}'] = 10
    FOOTBALL_CARDS[f'–ú–∞–Ω—É—ç–ª—å –ù–æ–π–µ—Ä {suit}'] = 10
    FOOTBALL_CARDS[f'–õ—É–∫–∞ –ú–æ–¥—Ä–∏—á {suit}'] = 10
    FOOTBALL_CARDS[f'–ö–∞—Ä–∏–º –ë–µ–Ω–∑–µ–º–∞ {suit}'] = 10

# –í–∞–ª–µ—Ç (10 –æ—á–∫–æ–≤)
for suit in SUITS:
    FOOTBALL_CARDS[f'–ú–æ—Ö–∞–º–µ–¥ –°–∞–ª–∞—Ö {suit}'] = 10
    FOOTBALL_CARDS[f'–•–∞—Ä—Ä–∏ –ö–µ–π–Ω {suit}'] = 10
    FOOTBALL_CARDS[f'–≠—Ä–ª–∏–Ω–≥ –•–æ–ª–∞–Ω–Ω {suit}'] = 10
    FOOTBALL_CARDS[f'–°–∞–¥–∏–æ –ú–∞–Ω–µ {suit}'] = 10

# 10 (10 –æ—á–∫–æ–≤)
for suit in SUITS:
    FOOTBALL_CARDS[f'–°–æ–Ω –•—ã–Ω –ú–∏–Ω {suit}'] = 10
    FOOTBALL_CARDS[f'–î–∂–æ—à—É–∞ –ö–∏–º–º–∏—Ö {suit}'] = 10
    FOOTBALL_CARDS[f'–¢–æ–Ω–∏ –ö—Ä–æ–æ—Å {suit}'] = 10
    FOOTBALL_CARDS[f'–°–µ—Ä—Ö–∏–æ –†–∞–º–æ—Å {suit}'] = 10

# 9 (9 –æ—á–∫–æ–≤)
for suit in SUITS:
    FOOTBALL_CARDS[f'–ü–æ–ª—å –ü–æ–≥–±–∞ {suit}'] = 9
    FOOTBALL_CARDS[f'–ê–Ω—Ç—É–∞–Ω –ì—Ä–∏–∑–º–∞–Ω–Ω {suit}'] = 9
    FOOTBALL_CARDS[f'–†–∞—Ö–∏–º –°—Ç–µ—Ä–ª–∏–Ω–≥ {suit}'] = 9
    FOOTBALL_CARDS[f'–ú–∞—Ä–∫—É—Å –†—ç—à—Ñ–æ—Ä–¥ {suit}'] = 9

# 8 (8 –æ—á–∫–æ–≤)
for suit in SUITS:
    FOOTBALL_CARDS[f'–î–∂–µ–π–¥–æ–Ω –°–∞–Ω—á–æ {suit}'] = 8
    FOOTBALL_CARDS[f'–§–∏–ª –§–æ–¥–µ–Ω {suit}'] = 8
    FOOTBALL_CARDS[f'–î–µ–∫–ª–∞–Ω –†–∞–π—Å {suit}'] = 8
    FOOTBALL_CARDS[f'–ú—ç–π—Å–æ–Ω –ú–∞—É–Ω—Ç {suit}'] = 8

# 7 (7 –æ—á–∫–æ–≤)
for suit in SUITS:
    FOOTBALL_CARDS[f'–ù–≥–æ–ª–æ –ö–∞–Ω—Ç–µ {suit}'] = 7
    FOOTBALL_CARDS[f'–ê–Ω—Ö–µ–ª—å –î–∏ –ú–∞—Ä–∏—è {suit}'] = 7
    FOOTBALL_CARDS[f'–≠–¥–µ–Ω –ê–∑–∞—Ä {suit}'] = 7
    FOOTBALL_CARDS[f'–õ—É–∫–∞—Å –≠—Ä–Ω–∞–Ω–¥–µ—Å {suit}'] = 7

# 6 (6 –æ—á–∫–æ–≤)
for suit in SUITS:
    FOOTBALL_CARDS[f'–¢—Ä–µ–Ω—Ç –ê–ª–µ–∫—Å–∞–Ω–¥–µ—Ä-–ê—Ä–Ω–æ–ª—å–¥ {suit}'] = 6
    FOOTBALL_CARDS[f'–ê–Ω–¥—Ä—é –†–æ–±–µ—Ä—Ç—Å–æ–Ω {suit}'] = 6
    FOOTBALL_CARDS[f'–ö–∞–π–ª –£–æ–∫–µ—Ä {suit}'] = 6
    FOOTBALL_CARDS[f'–ê–π–º–µ—Ä–∏–∫ –õ–∞–ø–æ—Ä—Ç {suit}'] = 6

# 5 (5 –æ—á–∫–æ–≤)
for suit in SUITS:
    FOOTBALL_CARDS[f'–ñ–æ—Ä–∂–∏–Ω—å–æ {suit}'] = 5
    FOOTBALL_CARDS[f'–ú–∞—Ä–∫–æ –í–µ—Ä—Ä–∞—Ç—Ç–∏ {suit}'] = 5
    FOOTBALL_CARDS[f'–§—Ä–µ–Ω–∫–∏ –¥–µ –ô–æ–Ω–≥ {suit}'] = 5
    FOOTBALL_CARDS[f'–†–æ–¥—Ä–∏ {suit}'] = 5

# 4 (4 –æ—á–∫–æ–≤)
for suit in SUITS:
    FOOTBALL_CARDS[f'–≠–¥–µ—Ä –ú–∏–ª–∏—Ç–∞–Ω {suit}'] = 4
    FOOTBALL_CARDS[f'–î–∞–≤–∏–¥ –ê–ª–∞–±–∞ {suit}'] = 4
    FOOTBALL_CARDS[f'–ê–ª—å—Ñ–æ–Ω—Å–æ –î—ç–≤–∏—Å {suit}'] = 4
    FOOTBALL_CARDS[f'–ê—à—Ä–∞—Ñ –•–∞–∫–∏–º–∏ {suit}'] = 4

# 3 (3 –æ—á–∫–∞)
for suit in SUITS:
    FOOTBALL_CARDS[f'–ê–Ω—Ö–µ–ª—å –¥–∏ –ú–∞—Ä–∏—è {suit}'] = 3
    FOOTBALL_CARDS[f'–ö–∞–π –•–∞–≤–µ—Ä—Ü {suit}'] = 3
    FOOTBALL_CARDS[f'–î–∂–µ–π–º–∏ –í–∞—Ä–¥–∏ {suit}'] = 3
    FOOTBALL_CARDS[f'–†–∞—Ñ–∞—ç–ª—å –í–∞—Ä–∞–Ω {suit}'] = 3

# 2 (2 –æ—á–∫–∞)
for suit in SUITS:
    FOOTBALL_CARDS[f'–î–∂–æ—Ä–¥–∞–Ω –ü–∏–∫—Ñ–æ—Ä–¥ {suit}'] = 2
    FOOTBALL_CARDS[f'–£–≥–æ –õ—å–æ—Ä–∏—Å {suit}'] = 2
    FOOTBALL_CARDS[f'–Ø–Ω –û–±–ª–∞–∫ {suit}'] = 2
    FOOTBALL_CARDS[f'–¢–∏–±–æ –ö—É—Ä—Ç—É–∞ {suit}'] = 2

# –§—É—Ç–±–æ–ª—å–Ω—ã–µ —Ñ—Ä–∞–∑—ã –∫–æ–º–º–µ–Ω—Ç–∞—Ç–æ—Ä–∞ –≤–º–µ—Å—Ç–æ –±–∞–Ω–¥–∏—Ç–∫–∏
COMMENTATOR_PHRASES = {
    'start': [
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Å—Ç–∞–¥–∏–æ–Ω! –ì–æ—Ç–æ–≤—ã –∫ —Ñ—É—Ç–±–æ–ª—å–Ω–æ–º—É 21? ‚öΩ",
        "–ú—è—á –≤ —Ü–µ–Ω—Ç—Ä–µ –ø–æ–ª—è! –ö—Ç–æ –∑–∞–±—å—ë—Ç –ø–µ—Ä–≤—ã–π? üéØ",
        "–ù–∞–ø—Ä—è–∂–µ–Ω–∏–µ –Ω–∞—Ä–∞—Å—Ç–∞–µ—Ç... –ò–≥—Ä–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è! üî•",
        "–ë–æ–ª–µ–ª—å—â–∏–∫–∏ –∑–∞–º–µ—Ä–ª–∏ –≤ –æ–∂–∏–¥–∞–Ω–∏–∏ –ø–µ—Ä–≤–æ–≥–æ –ø–∞—Å–∞! üëÄ",
        "–°–µ–≥–æ–¥–Ω—è –Ω–∞ –ø–æ–ª–µ - –ª—É—á—à–∏–µ –∏–∑ –ª—É—á—à–∏—Ö! üí´"
    ],
    'win': [
        "–ì–û–û–û–û–õ! –ù–µ–≤–µ—Ä–æ—è—Ç–Ω–∞—è –ø–æ–±–µ–¥–∞! üéâ",
        "–í–æ—Ç —ç—Ç–æ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ! –ò–≥—Ä–æ–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –∫–ª–∞—Å—Å! ‚≠ê",
        "–ë–æ–ª–µ–ª—å—â–∏–∫–∏ —Å—Ö–æ–¥—è—Ç —Å —É–º–∞! –ö–∞–∫–∞—è –∏–≥—Ä–∞! ü§Ø",
        "–¢–∞–∫–æ–π –∫—Ä–∞—Å–æ—Ç—ã —è –¥–∞–≤–Ω–æ –Ω–µ –≤–∏–¥–µ–ª! –§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞! ‚ú®",
        "–≠—Ç–æ –±—É–¥–µ—Ç –ø–æ–º–Ω–∏—Ç—å—Å—è –¥–æ–ª–≥–æ! –í–µ–ª–∏–∫–æ–ª–µ–ø–Ω–æ! üëè"
    ],
    'lose': [
        "–£–ø—É—Å—Ç–∏–ª–∏ –ø–æ–±–µ–¥—É... –ñ–∞–ª—å üòî",
        "–ù–µ –ø–æ–≤–µ–∑–ª–æ —Å–µ–≥–æ–¥–Ω—è... –í —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ —Ç–æ—á–Ω–æ –ø–æ–ª—É—á–∏—Ç—Å—è! üí™",
        "–°–æ–ø–µ—Ä–Ω–∏–∫ –±—ã–ª —Å–∏–ª—å–Ω–µ–µ... –ù–æ –≤—ã –¥–µ—Ä–∂–∞–ª–∏—Å—å –¥–æ—Å—Ç–æ–π–Ω–æ! üõ°Ô∏è",
        "–ò–Ω–æ–≥–¥–∞ –ø—Ä–æ–∏–≥—Ä—ã–≤–∞—é—Ç –¥–∞–∂–µ –ª—É—á—à–∏–µ... –ù–µ –≤–µ—à–∞–π—Ç–µ –Ω–æ—Å! üåü",
        "–≠—Ç–æ –≤—Å–µ–≥–æ –ª–∏—à—å –æ–¥–Ω–∞ –∏–≥—Ä–∞! –í–ø–µ—Ä–µ–¥–∏ –µ—â—ë –º–Ω–æ–≥–æ –º–∞—Ç—á–µ–π! ‚öΩ"
    ],
    'perfect_score': [
        "–ò–î–ï–ê–õ–¨–ù–´–ô –•–ï–¢-–¢–†–ò–ö! 21 –æ—á–∫–æ! üéØ",
        "–ë–†–ê–í–û! –ê–±—Å–æ–ª—é—Ç–Ω–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å! üí´",
        "–¢–∞–∫–æ–≥–æ —è –µ—â—ë –Ω–µ –≤–∏–¥–µ–ª! –§–µ–Ω–æ–º–µ–Ω–∞–ª—å–Ω–æ! ü§©",
        "–≠—Ç–æ –≤–æ–π–¥—ë—Ç –≤ –∏—Å—Ç–æ—Ä–∏—é —Ç—É—Ä–Ω–∏—Ä–∞! –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω–æ! üìú",
        "–°–Ω–∏–º–∏—Ç–µ —à–ª—è–ø—É! –í–µ–ª–∏—á–∞–π—à–µ–µ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–µ! üé©"
    ],
    'draw': [
        "–ù–∏—á—å—è! –ù–∞–ø—Ä—è–∂—ë–Ω–Ω–∞—è –±–æ—Ä—å–±–∞ –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–µ–∫—É–Ω–¥—ã! ‚è±Ô∏è",
        "–†–∞–≤–Ω–∞—è –∏–≥—Ä–∞! –û–±–∞ –∑–∞—Å–ª—É–∂–∏–≤–∞—é—Ç —É–≤–∞–∂–µ–Ω–∏—è! ü§ù",
        "–ò–Ω—Ç—Ä–∏–≥–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –¥–æ —Å–ª–µ–¥—É—é—â–µ–π –≤—Å—Ç—Ä–µ—á–∏! üîÑ",
        "–ù–∏–∫—Ç–æ –Ω–µ —Ö–æ—Ç–µ–ª —É—Å—Ç—É–ø–∞—Ç—å! –í–æ—Ç —ç—Ç–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä! üí™",
        "–°–ø—Ä–∞–≤–µ–¥–ª–∏–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! –û–±–∞ –º–æ–ª–æ–¥—Ü—ã! üëè"
    ],
    'add_player': [
        "–ò–≥—Ä–æ–∫ –≤—ã—Ö–æ–¥–∏—Ç –Ω–∞ –∑–∞–º–µ–Ω—É! –£—Å–∏–ª–∏–≤–∞–µ–º –∞—Ç–∞–∫—É! ‚ö°",
        "–°–≤–µ–∂–∏–µ —Å–∏–ª—ã –Ω–∞ –ø–æ–ª–µ! –ß—Ç–æ —ç—Ç–æ –∏–∑–º–µ–Ω–∏—Ç? üîÑ",
        "–¢—Ä–µ–Ω–µ—Ä –¥–µ–ª–∞–µ—Ç —Ö–æ–¥! –ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ! üß†",
        "–ù–æ–≤—ã–π –∏–≥—Ä–æ–∫ –≤—Ö–æ–¥–∏—Ç –≤ –∏–≥—Ä—É! –ü–æ—Å–º–æ—Ç—Ä–∏–º –Ω–∞ –µ–≥–æ impact! üí•",
        "–†–æ—Ç–∞—Ü–∏—è —Å–æ—Å—Ç–∞–≤–æ–≤! –ö—Ç–æ –ø—Ä–æ—è–≤–∏—Ç —Å–µ–±—è? üåü"
    ],
    'stand': [
        "–ò–≥—Ä–æ–∫ –¥–æ–≤–æ–ª–µ–Ω —Å–æ—Å—Ç–∞–≤–æ–º! –†–µ—à–µ–Ω–æ –Ω–µ –º–µ–Ω—è—Ç—å ü§î",
        "–¢—Ä–µ–Ω–µ—Ä —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Ç–µ–∫—É—â—É—é —Ç–∞–∫—Ç–∏–∫—É! –ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ... üßê",
        "–ù–∏–∫–∞–∫–∏—Ö –∑–∞–º–µ–Ω! –í–µ—Ä—è—Ç –≤ —Ç–µ–∫—É—â—É—é –∫–æ–º–∞–Ω–¥—É! üí™",
        "–°–æ—Å—Ç–∞–≤ –æ—Å—Ç–∞—ë—Ç—Å—è –ø—Ä–µ–∂–Ω–∏–º! –†–∏—Å–∫–æ–≤–∞–Ω–Ω–æ? üé≤",
        "–†–µ—à–µ–Ω–æ –Ω–µ —Ä–∏—Å–∫–æ–≤–∞—Ç—å! –ò–≥—Ä–∞–µ–º —Ç–µ–º, —á—Ç–æ –µ—Å—Ç—å! ‚öΩ"
    ],
    'over_score': [
        "–ü–µ—Ä–µ–±–æ—Ä! –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–æ–≤ –≤ –∞—Ç–∞–∫–µ! üö®",
        "–¢–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞! –ü–µ—Ä–µ–≥—Ä—É–∑–∏–ª–∏ —Å–æ—Å—Ç–∞–≤ üò¨",
        "–î–∏—Å–±–∞–ª–∞–Ω—Å –≤ –∫–æ–º–∞–Ω–¥–µ! –ù—É–∂–Ω–æ –±—ã–ª–æ –ª—É—á—à–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–∏–ª—ã! ‚öñÔ∏è",
        "–ü–µ—Ä–µ–±–æ—Ä —Å –∞—Ç–∞–∫—É—é—â–∏–º–∏! –ó–∞–±—ã–ª–∏ –ø—Ä–æ –∑–∞—â–∏—Ç—É! üõ°Ô∏è",
        "–ö–æ–º–∞–Ω–¥–∞ –ø–æ—Ç–µ—Ä—è–ª–∞ —Ä–∞–≤–Ω–æ–≤–µ—Å–∏–µ! –°–ª–∏—à–∫–æ–º —Ä–∏—Å–∫–æ–≤–∞–Ω–Ω–æ! üí£"
    ]
}

class Football21States(StatesGroup):
    choosing_bet = State()
    playing = State()

# –°—Ç–∞–≤–∫–∏ –¥–ª—è —Ñ—É—Ç–±–æ–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏
FOOTBALL_BET_AMOUNTS = [100, 250, 500, 1000, 2500, 5000, 10000]

@router.callback_query(F.data == "open_football21")
async def open_football21(callback: CallbackQuery, state: FSMContext):
    """–û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ—É—Ç–±–æ–ª—å–Ω–æ–π –∏–≥—Ä—ã 21"""
    user_id = callback.from_user.id
    user = await get_user_by_id(user_id)

    if user['balance'] < min(FOOTBALL_BET_AMOUNTS):
        await callback.answer(
            f"‚öΩ –ù—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º {min(FOOTBALL_BET_AMOUNTS)} –º–æ–Ω–µ—Ç –¥–ª—è –≤—ã—Ö–æ–¥–∞ –Ω–∞ –ø–æ–ª–µ!",
            show_alert=True
        )
        return

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—ã–±–æ—Ä–∞ —Å—Ç–∞–≤–∫–∏
    await state.set_state(Football21States.choosing_bet)

    # –ö–Ω–æ–ø–∫–∏ —Å—Ç–∞–≤–æ–∫
    bet_buttons = []
    for amount in FOOTBALL_BET_AMOUNTS:
        if user['balance'] >= amount:
            bet_buttons.append([InlineKeyboardButton(
                text=f"‚öΩ –°—Ç–∞–≤–∫–∞: {amount} –º–æ–Ω–µ—Ç",
                callback_data=f"football21_bet:{amount}"
            )])

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–∞—Ä—Ç –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    bet_buttons.append([InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="football21_stats")])
    bet_buttons.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_menu")])

    keyboard = InlineKeyboardMarkup(inline_keyboard=bet_buttons)
    commentator_phrase = random.choice(COMMENTATOR_PHRASES['start'])

    await callback.message.edit_text(
        f"‚öΩ <b>–§–£–¢–ë–û–õ–¨–ù–´–ô –ë–õ–≠–ö –î–ñ–ï–ö</b>\n\n"
        f"üéôÔ∏è <i>\"{commentator_phrase}\"</i>\n\n"
        f"üìú <b>–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã:</b>\n"
        f"<blockquote>‚ñ´Ô∏è –°–æ–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É –Ω–∞ 21 –æ—á–∫–æ\n"
        f"‚ñ´Ô∏è –ö–∞–∂–¥—ã–π –∏–≥—Ä–æ–∫ –∏–º–µ–µ—Ç —Å–≤–æ–π —Ä–µ–π—Ç–∏–Ω–≥\n"
        f"‚ñ´Ô∏è –ò–¥–µ–∞–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ (21 –æ—á–∫–æ) = x3 —Å—Ç–∞–≤–∫–∏\n"
        f"‚ñ´Ô∏è –ü–µ—Ä–µ–±–æ—Ä (>21) = –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ—Ä–∞–∂–µ–Ω–∏–µ\n"
        f"‚ñ´Ô∏è –ü—Ä–∏ –Ω–∏—á—å–µ - –≤–æ–∑–≤—Ä–∞—Ç —Å—Ç–∞–≤–∫–∏</blockquote>\n\n"
        f"üí∞ <b>–í–∞—à –±–∞–ª–∞–Ω—Å:</b> {user['balance']} –º–æ–Ω–µ—Ç\n\n"
        f"<i>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:</i>",
        reply_markup=keyboard,
        parse_mode="HTML"
    )

@router.callback_query(F.data.startswith("football21_bet:"))
async def start_football21(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞–ª–æ —Ñ—É—Ç–±–æ–ª—å–Ω–æ–π –∏–≥—Ä—ã 21"""
    user_id = callback.from_user.id
    bet_amount = int(callback.data.split(":")[1])
    
    user_info = await get_user_by_id(user_id)
    if user_info['balance'] < bet_amount:
        await callback.answer("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç!", show_alert=True)
        return

    # –°–Ω–∏–º–∞–µ–º —Å—Ç–∞–≤–∫—É
    await update_user_balance(user_id, -bet_amount)

    # –§–æ—Ä–º–∏—Ä—É–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
    available_players = list(FOOTBALL_CARDS.keys())
    user_team = random.sample(available_players, 2)
    opponent_team = random.sample(available_players, 2)

    # –°—á–∏—Ç–∞–µ–º –æ—á–∫–∏
    user_score = calculate_score_with_aces(user_team)
    opponent_score = calculate_score_with_aces(opponent_team)

    await state.update_data(
        bet_amount=bet_amount,
        user_score=user_score,
        opponent_score=opponent_score,
        user_team=user_team,
        opponent_team=opponent_team,
        available_players=available_players
    )

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
    await state.set_state(Football21States.playing)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ä–∞–∑—É –≤—ã–∏–≥—Ä—ã—à–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏
    if user_score == 21 and opponent_score != 21:
        await handle_perfect_score(callback, state)
        return
    elif opponent_score == 21 and user_score != 21:
        await handle_opponent_perfect(callback, state)
        return
    elif user_score == 21 and opponent_score == 21:
        await handle_double_perfect(callback, state)
        return

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
    await show_game_state(callback, state)

async def show_game_state(callback: CallbackQuery, state: FSMContext):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã"""
    data = await state.get_data()
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ —Å –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
    user_team_text = "\n".join([f"‚Ä¢ {player} - {FOOTBALL_CARDS[player]}" for player in data['user_team']])
    opponent_visible = data['opponent_team'][0]  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞
    opponent_value = FOOTBALL_CARDS[opponent_visible]

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫–∞", callback_data="football21_add")],
        [InlineKeyboardButton(text="‚èπÔ∏è –ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å —Å–æ—Å—Ç–∞–≤", callback_data="football21_stand")],
    ])

    await callback.message.edit_text(
        f"‚öΩ <b>–§–£–¢–ë–û–õ–¨–ù–´–ô 21 - –¢–ï–ö–£–©–ò–ô –°–ß–Å–¢</b>\n\n"
        f"<b>–í–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞:</b> {data['user_score']} –æ—á–∫–æ–≤\n"
        f"{user_team_text}\n\n"
        f"<b>–ö–æ–º–∞–Ω–¥–∞ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞:</b>\n"
        f"‚Ä¢ {opponent_visible} - {opponent_value}\n"
        f"‚Ä¢ ‚öΩ [–°–∫—Ä—ã—Ç—ã–π –∏–≥—Ä–æ–∫]\n\n"
        f"üéôÔ∏è <i>\"{random.choice(COMMENTATOR_PHRASES['add_player'])}\"</i>\n\n"
        f"–ß—Ç–æ –±—É–¥–µ—Ç–µ –¥–µ–ª–∞—Ç—å?",
        reply_markup=keyboard,
        parse_mode="HTML"
    )

@router.callback_query(F.data == "football21_add", Football21States.playing)
async def add_player(callback: CallbackQuery, state: FSMContext):
    """–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –≤ –∫–æ–º–∞–Ω–¥—É"""
    data = await state.get_data()
    
    # –ò—Å–∫–ª—é—á–∞–µ–º —É–∂–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤
    used_players = data['user_team'] + data['opponent_team']
    available_players = [p for p in data['available_players'] if p not in used_players]
    
    if not available_players:
        await callback.answer("–ë–æ–ª—å—à–µ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤!", show_alert=True)
        return

    new_player = random.choice(available_players)
    new_user_team = data['user_team'] + [new_player]
    new_user_score = calculate_score_with_aces(new_user_team)

    await state.update_data(
        user_team=new_user_team,
        user_score=new_user_score
    )

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–±–æ—Ä
    if new_user_score > 21:
        await handle_over_score(callback, state)
        return

    await show_game_state(callback, state)
    await callback.answer(f"–î–æ–±–∞–≤–ª–µ–Ω: {new_player}!")

@router.callback_query(F.data == "football21_stand", Football21States.playing)
async def stand_team(callback: CallbackQuery, state: FSMContext):
    """–§–∏–∫—Å–∞—Ü–∏—è —Å–æ—Å—Ç–∞–≤–∞ –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏–≥—Ä—ã"""
    data = await state.get_data()
    
    # –°–æ–ø–µ—Ä–Ω–∏–∫ –¥–æ–±–∏—Ä–∞–µ—Ç –∏–≥—Ä–æ–∫–æ–≤ –ø–æ –ø—Ä–∞–≤–∏–ª–∞–º (–¥–æ 17 –æ—á–∫–æ–≤)
    opponent_team = data['opponent_team']
    opponent_score = data['opponent_score']
    used_players = data['user_team'] + opponent_team
    available_players = [p for p in data['available_players'] if p not in used_players]

    while opponent_score < 17 and available_players:
        new_player = random.choice(available_players)
        opponent_team.append(new_player)
        opponent_score += FOOTBALL_CARDS[new_player]
        available_players.remove(new_player)

    await state.update_data(
        opponent_team=opponent_team,
        opponent_score=opponent_score
    )

    await finish_football21(callback, state)

async def finish_football21(callback: CallbackQuery, state: FSMContext):
    """–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏–≥—Ä—ã –∏ –ø–æ–¥—Å—á–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"""
    data = await state.get_data()
    user_id = callback.from_user.id
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–ø–∏—Å–∫–∏ –∫–æ–º–∞–Ω–¥ —Å –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
    user_team_text = "\n".join([f"‚Ä¢ {player} - {FOOTBALL_CARDS[player]}" for player in data['user_team']])
    opponent_team_text = "\n".join([f"‚Ä¢ {player} - {FOOTBALL_CARDS[player]}" for player in data['opponent_team']])

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if data['user_score'] > 21:
        result = "lose"
        result_text = "üíÄ –ü–ï–†–ï–ë–û–†! –í–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ—Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∞!"
        win_amount = 0
        phrase = random.choice(COMMENTATOR_PHRASES['over_score'])
    elif data['opponent_score'] > 21:
        result = "win"
        win_amount = data['bet_amount'] * 2
        result_text = f"‚ú® –ü–û–ë–ï–î–ê! –°–æ–ø–µ—Ä–Ω–∏–∫ –ø–µ—Ä–µ–±—Ä–∞–ª! +{win_amount} –º–æ–Ω–µ—Ç"
        phrase = random.choice(COMMENTATOR_PHRASES['win'])
    elif data['user_score'] > data['opponent_score']:
        result = "win"
        win_amount = data['bet_amount'] * 2
        result_text = f"‚ú® –ü–û–ë–ï–î–ê! –í–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ —Å–∏–ª—å–Ω–µ–µ! +{win_amount} –º–æ–Ω–µ—Ç"
        phrase = random.choice(COMMENTATOR_PHRASES['win'])
    elif data['user_score'] < data['opponent_score']:
        result = "lose"
        win_amount = 0
        result_text = "üíÄ –ü–û–†–ê–ñ–ï–ù–ò–ï! –°–æ–ø–µ—Ä–Ω–∏–∫ –æ–∫–∞–∑–∞–ª—Å—è —Å–∏–ª—å–Ω–µ–µ!"
        phrase = random.choice(COMMENTATOR_PHRASES['lose'])
    else:
        result = "draw"
        win_amount = data['bet_amount']
        result_text = f"üîÑ –ù–ò–ß–¨–Ø! –í–æ–∑–≤—Ä–∞—Ç {data['bet_amount']} –º–æ–Ω–µ—Ç"
        phrase = random.choice(COMMENTATOR_PHRASES['draw'])

    # –ù–∞—á–∏—Å–ª—è–µ–º –≤—ã–∏–≥—Ä—ã—à
    if win_amount > 0:
        await update_user_balance(user_id, win_amount)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–≥—Ä—ã
    await save_game_result(
        user_id=user_id,
        game_type="football_21",
        result=result,
        bet_amount=data['bet_amount'],
        win_amount=win_amount,
        player_score=data['user_score'],
        opponent_score=data['opponent_score']
    )

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚öΩ –ò–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞", callback_data="open_football21")],
        [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu")],
    ])

    await callback.message.edit_text(
        f"‚öΩ <b>–§–ò–ù–ê–õ–¨–ù–´–ô –°–ß–Å–¢</b>\n\n"
        f"<b>–í–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞:</b> {data['user_score']} –æ—á–∫–æ–≤\n"
        f"{user_team_text}\n\n"
        f"<b>–ö–æ–º–∞–Ω–¥–∞ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞:</b> {data['opponent_score']} –æ—á–∫–æ–≤\n"
        f"{opponent_team_text}\n\n"
        f"üéôÔ∏è <i>\"{phrase}\"</i>\n\n"
        f"üí∞ <b>{result_text}</b>",
        reply_markup=keyboard,
        parse_mode="HTML"
    )
    await state.clear()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π (perfect score –∏ —Ç.–¥.)
async def handle_perfect_score(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–¥–µ–∞–ª—å–Ω–æ–≥–æ —Å—á–µ—Ç–∞ 21"""
    data = await state.get_data()
    user_id = callback.from_user.id
    
    win_amount = data['bet_amount'] * 3
    await update_user_balance(user_id, win_amount)
    
    await save_game_result(
        user_id=user_id,
        game_type="football_21",
        result="win",
        bet_amount=data['bet_amount'],
        win_amount=win_amount,
        player_score=21,
        opponent_score=data['opponent_score']
    )

    user_team_text = "\n".join([f"‚Ä¢ {player} - {FOOTBALL_CARDS[player]}" for player in data['user_team']])
    opponent_team_text = "\n".join([f"‚Ä¢ {player} - {FOOTBALL_CARDS[player]}" for player in data['opponent_team']])

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚öΩ –ò–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞", callback_data="open_football21")],
        [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu")],
    ])

    await callback.message.edit_text(
        f"‚öΩ <b>–ò–î–ï–ê–õ–¨–ù–´–ô –•–ï–¢-–¢–†–ò–ö! üéØ</b>\n\n"
        f"<b>–í–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞:</b> 21 –æ—á–∫–æ\n"
        f"{user_team_text}\n\n"
        f"<b>–ö–æ–º–∞–Ω–¥–∞ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞:</b> {data['opponent_score']} –æ—á–∫–æ–≤\n"
        f"{opponent_team_text}\n\n"
        f"üéôÔ∏è <i>\"{random.choice(COMMENTATOR_PHRASES['perfect_score'])}\"</i>\n\n"
        f"üí∞ <b>–í–´–ò–ì–†–´–®: {win_amount} –º–æ–Ω–µ—Ç! (x3 —Å—Ç–∞–≤–∫–∏)</b>",
        reply_markup=keyboard,
        parse_mode="HTML"
    )
    await state.clear()

async def handle_opponent_perfect(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏—Ç—É–∞—Ü–∏–∏, –∫–æ–≥–¥–∞ —É —Å–æ–ø–µ—Ä–Ω–∏–∫–∞ –∏–¥–µ–∞–ª—å–Ω—ã–π —Å—á–µ—Ç 21"""
    data = await state.get_data()
    user_id = callback.from_user.id
    
    await save_game_result(
        user_id=user_id,
        game_type="football_21",
        result="lose",
        bet_amount=data['bet_amount'],
        win_amount=0,
        player_score=data['user_score'],
        opponent_score=21
    )

    user_team_text = "\n".join([f"‚Ä¢ {player} - {FOOTBALL_CARDS[player]}" for player in data['user_team']])
    opponent_team_text = "\n".join([f"‚Ä¢ {player} - {FOOTBALL_CARDS[player]}" for player in data['opponent_team']])

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚öΩ –ò–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞", callback_data="open_football21")],
        [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu")],
    ])

    await callback.message.edit_text(
        f"‚öΩ <b>–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ù–ï–£–î–ê–ß–ê! üíÄ</b>\n\n"
        f"<b>–í–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞:</b> {data['user_score']} –æ—á–∫–æ–≤\n"
        f"{user_team_text}\n\n"
        f"<b>–ö–æ–º–∞–Ω–¥–∞ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞:</b> 21 –æ—á–∫–æ\n"
        f"{opponent_team_text}\n\n"
        f"üéôÔ∏è <i>\"{random.choice(COMMENTATOR_PHRASES['lose'])}\"</i>\n\n"
        f"üíÄ <b>–°–æ–ø–µ—Ä–Ω–∏–∫ —Å–æ–±—Ä–∞–ª –∏–¥–µ–∞–ª—å–Ω—É—é –∫–æ–º–∞–Ω–¥—É!</b>",
        reply_markup=keyboard,
        parse_mode="HTML"
    )
    await state.clear()

async def handle_double_perfect(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏—Ç—É–∞—Ü–∏–∏, –∫–æ–≥–¥–∞ –æ–±–µ –∫–æ–º–∞–Ω–¥—ã –Ω–∞–±—Ä–∞–ª–∏ 21 –æ—á–∫–æ"""
    data = await state.get_data()
    user_id = callback.from_user.id
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–≤–∫—É
    await update_user_balance(user_id, data['bet_amount'])
    
    await save_game_result(
        user_id=user_id,
        game_type="football_21",
        result="draw",
        bet_amount=data['bet_amount'],
        win_amount=data['bet_amount'],
        player_score=21,
        opponent_score=21
    )

    user_team_text = "\n".join([f"‚Ä¢ {player} - {FOOTBALL_CARDS[player]}" for player in data['user_team']])
    opponent_team_text = "\n".join([f"‚Ä¢ {player} - {FOOTBALL_CARDS[player]}" for player in data['opponent_team']])

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚öΩ –ò–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞", callback_data="open_football21")],
        [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu")],
    ])

    await callback.message.edit_text(
        f"‚öΩ <b>–ù–ï–í–ï–†–û–Ø–¢–ù–ê–Ø –ù–ò–ß–¨–Ø! ü§ù</b>\n\n"
        f"<b>–í–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞:</b> 21 –æ—á–∫–æ\n"
        f"{user_team_text}\n\n"
        f"<b>–ö–æ–º–∞–Ω–¥–∞ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞:</b> 21 –æ—á–∫–æ\n"
        f"{opponent_team_text}\n\n"
        f"üéôÔ∏è <i>\"{random.choice(COMMENTATOR_PHRASES['draw'])}\"</i>\n\n"
        f"üîÑ <b>–û–±–µ –∫–æ–º–∞–Ω–¥—ã –∏–¥–µ–∞–ª—å–Ω—ã! –í–æ–∑–≤—Ä–∞—Ç —Å—Ç–∞–≤–∫–∏.</b>",
        reply_markup=keyboard,
        parse_mode="HTML"
    )
    await state.clear()

async def handle_over_score(callback: CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ–±–æ—Ä–∞ –æ—á–∫–æ–≤"""
    data = await state.get_data()
    user_id = callback.from_user.id
    
    # –°–æ–ø–µ—Ä–Ω–∏–∫ –≤—Å–µ —Ä–∞–≤–Ω–æ –¥–æ–±–∏—Ä–∞–µ—Ç –∏–≥—Ä–æ–∫–æ–≤
    opponent_team = data['opponent_team']
    opponent_score = data['opponent_score']
    used_players = data['user_team'] + opponent_team
    available_players = [p for p in data['available_players'] if p not in used_players]

    while opponent_score < 17 and available_players:
        new_player = random.choice(available_players)
        opponent_team.append(new_player)
        opponent_score += FOOTBALL_CARDS[new_player]
        available_players.remove(new_player)

    await save_game_result(
        user_id=user_id,
        game_type="football_21",
        result="lose",
        bet_amount=data['bet_amount'],
        win_amount=0,
        player_score=data['user_score'],
        opponent_score=opponent_score
    )

    user_team_text = "\n".join([f"‚Ä¢ {player} - {FOOTBALL_CARDS[player]}" for player in data['user_team']])
    opponent_team_text = "\n".join([f"‚Ä¢ {player} - {FOOTBALL_CARDS[player]}" for player in data['opponent_team']])

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚öΩ –ò–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞", callback_data="open_football21")],
        [InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu")],
    ])

    await callback.message.edit_text(
        f"‚öΩ <b>–ü–ï–†–ï–ë–û–†! üö®</b>\n\n"
        f"<b>–í–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞:</b> {data['user_score']} –æ—á–∫–æ–≤ (–ø–µ—Ä–µ–±–æ—Ä!)\n"
        f"{user_team_text}\n\n"
        f"<b>–ö–æ–º–∞–Ω–¥–∞ —Å–æ–ø–µ—Ä–Ω–∏–∫–∞:</b> {opponent_score} –æ—á–∫–æ–≤\n"
        f"{opponent_team_text}\n\n"
        f"üéôÔ∏è <i>\"{random.choice(COMMENTATOR_PHRASES['over_score'])}\"</i>\n\n"
        f"üíÄ <b>–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∏–≥—Ä–æ–∫–æ–≤! –ö–æ–º–∞–Ω–¥–∞ –Ω–µ—Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∞!</b>",
        reply_markup=keyboard,
        parse_mode="HTML"
    )
    await state.clear()

@router.callback_query(F.data == "football21_stats")
async def show_football21_stats(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–≥—Ä –≤ —Ñ—É—Ç–±–æ–ª—å–Ω—ã–π 21"""
    user_id = callback.from_user.id
    stats = await get_user_game_stats(user_id, "football_21")
    
    if stats['total_games'] == 0:
        text = "üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –§—É—Ç–±–æ–ª—å–Ω–æ–≥–æ –ë–ª—ç–∫ –î–∂–µ–∫–∞</b>\n\n"
        text += "–í—ã –µ—â—ë –Ω–µ —Å—ã–≥—Ä–∞–ª–∏ –Ω–∏ –æ–¥–Ω–æ–π –∏–≥—Ä—ã! üèÉ‚Äç‚ôÇÔ∏è\n"
        text += "–ù–∞—á–Ω–∏—Ç–µ –∏–≥—Ä–∞—Ç—å, —á—Ç–æ–±—ã —Å–æ–±—Ä–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É! ‚öΩ"
    else:
        win_rate = (stats['wins'] / stats['total_games'] * 100) if stats['total_games'] > 0 else 0
        profit = stats['total_winnings'] - stats['total_bets']
        
        text = (
            "üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –§—É—Ç–±–æ–ª—å–Ω–æ–≥–æ –ë–ª—ç–∫ –î–∂–µ–∫–∞</b>\n\n"
            f"<blockquote>üéØ –í—Å–µ–≥–æ –∏–≥—Ä: {stats['total_games']}\n"
            f"‚úÖ –ü–æ–±–µ–¥: {stats['wins']}\n"
            f"‚ùå –ü–æ—Ä–∞–∂–µ–Ω–∏–π: {stats['losses']}\n"
            f"ü§ù –ù–∏—á—å–∏—Ö: {stats['draws']}\n"
            f"üìà –ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–±–µ–¥: {win_rate:.1f}%\n\n"
            f"üí∞ –û–±—â–∏–π –≤—ã–∏–≥—Ä—ã—à: {stats['total_winnings']} –º–æ–Ω–µ—Ç\n"
            f"üé∞ –û–±—â–∏–µ —Å—Ç–∞–≤–∫–∏: {stats['total_bets']} –º–æ–Ω–µ—Ç\n"
            f"üíµ –ü—Ä–∏–±—ã–ª—å: {profit} –º–æ–Ω–µ—Ç</blockquote>\n\n"
        )
        
        if profit > 0:
            text += "‚≠ê –í—ã –≤ –ø–ª—é—Å–µ! –û—Ç–ª–∏—á–Ω–∞—è –∏–≥—Ä–∞! üèÜ"
        else:
            text += "üí™ –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –∏–≥—Ä–∞—Ç—å, —É–¥–∞—á–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–ª—ã–±–Ω—ë—Ç—Å—è! ‚öΩ"

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚öΩ –ò–≥—Ä–∞—Ç—å", callback_data="open_football21")],
        [InlineKeyboardButton(text="üè† –ù–∞–∑–∞–¥", callback_data="back_to_menu")],
    ])

    await callback.message.edit_text(text, reply_markup=keyboard, parse_mode="HTML")

def calculate_score_with_aces(cards):
    """–†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Å—É–º–º—É –æ—á–∫–æ–≤ —Å —É—á–µ—Ç–æ–º —Ç—É–∑–æ–≤ (1 –∏–ª–∏ 11)"""
    total = 0
    aces = 0
    
    for card in cards:
        value = FOOTBALL_CARDS[card]
        if value == 11:  # –≠—Ç–æ —Ç—É–∑
            aces += 1
            total += 11
        else:
            total += value
    
    # –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä—É–µ–º —Ç—É–∑—ã –µ—Å–ª–∏ –ø–µ—Ä–µ–±–æ—Ä
    while total > 21 and aces > 0:
        total -= 10  # –¢—É–∑ —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è 1 –≤–º–µ—Å—Ç–æ 11
        aces -= 1
    
    return total